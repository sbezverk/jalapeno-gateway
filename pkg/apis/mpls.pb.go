// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls.proto

package apis

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MPLSL3Prefix struct {
	Prefix *Prefix `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// vpn label assigned to the prefix by the originating provider edge router
	VpnLabel uint32 `protobuf:"varint,2,opt,name=vpn_label,json=vpnLabel,proto3" json:"vpn_label,omitempty"`
	// Source Autonomous System Number
	Asn uint32 `protobuf:"varint,3,opt,name=asn,proto3" json:"asn,omitempty"`
	// Next hop address
	NhAddress            []byte     `protobuf:"bytes,4,opt,name=nh_address,json=nhAddress,proto3" json:"nh_address,omitempty"`
	Rd                   *any.Any   `protobuf:"bytes,5,opt,name=rd,proto3" json:"rd,omitempty"`
	Rt                   []*any.Any `protobuf:"bytes,6,rep,name=rt,proto3" json:"rt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MPLSL3Prefix) Reset()         { *m = MPLSL3Prefix{} }
func (m *MPLSL3Prefix) String() string { return proto.CompactTextString(m) }
func (*MPLSL3Prefix) ProtoMessage()    {}
func (*MPLSL3Prefix) Descriptor() ([]byte, []int) {
	return fileDescriptor_a83b8eda31512392, []int{0}
}

func (m *MPLSL3Prefix) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MPLSL3Prefix.Unmarshal(m, b)
}
func (m *MPLSL3Prefix) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MPLSL3Prefix.Marshal(b, m, deterministic)
}
func (m *MPLSL3Prefix) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MPLSL3Prefix.Merge(m, src)
}
func (m *MPLSL3Prefix) XXX_Size() int {
	return xxx_messageInfo_MPLSL3Prefix.Size(m)
}
func (m *MPLSL3Prefix) XXX_DiscardUnknown() {
	xxx_messageInfo_MPLSL3Prefix.DiscardUnknown(m)
}

var xxx_messageInfo_MPLSL3Prefix proto.InternalMessageInfo

func (m *MPLSL3Prefix) GetPrefix() *Prefix {
	if m != nil {
		return m.Prefix
	}
	return nil
}

func (m *MPLSL3Prefix) GetVpnLabel() uint32 {
	if m != nil {
		return m.VpnLabel
	}
	return 0
}

func (m *MPLSL3Prefix) GetAsn() uint32 {
	if m != nil {
		return m.Asn
	}
	return 0
}

func (m *MPLSL3Prefix) GetNhAddress() []byte {
	if m != nil {
		return m.NhAddress
	}
	return nil
}

func (m *MPLSL3Prefix) GetRd() *any.Any {
	if m != nil {
		return m.Rd
	}
	return nil
}

func (m *MPLSL3Prefix) GetRt() []*any.Any {
	if m != nil {
		return m.Rt
	}
	return nil
}

func init() {
	proto.RegisterType((*MPLSL3Prefix)(nil), "apis.MPLSL3Prefix")
}

func init() { proto.RegisterFile("mpls.proto", fileDescriptor_a83b8eda31512392) }

var fileDescriptor_a83b8eda31512392 = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x8e, 0xcd, 0x4a, 0xc4, 0x30,
	0x14, 0x85, 0x49, 0x3b, 0x16, 0xe7, 0x5a, 0x41, 0x82, 0x8b, 0x38, 0x22, 0x04, 0x99, 0x45, 0x57,
	0x19, 0x70, 0x9e, 0x60, 0xf6, 0x15, 0x86, 0xf8, 0x00, 0x43, 0x42, 0xd2, 0x1f, 0x88, 0x49, 0x48,
	0x6a, 0xb1, 0x2f, 0xe9, 0x33, 0x49, 0x13, 0xdd, 0xce, 0xee, 0xe4, 0x3b, 0x1f, 0xb9, 0x07, 0xe0,
	0xd3, 0x9b, 0xc8, 0x7c, 0x70, 0x93, 0xc3, 0x1b, 0xe1, 0xc7, 0xb8, 0x7b, 0xea, 0x9d, 0xeb, 0x8d,
	0x3e, 0x24, 0x26, 0xbf, 0xba, 0x83, 0xb0, 0x4b, 0x16, 0x76, 0x20, 0x45, 0xd4, 0x39, 0xbf, 0xfe,
	0x20, 0xa8, 0xdf, 0xcf, 0xed, 0x47, 0x7b, 0x3c, 0x07, 0xdd, 0x8d, 0xdf, 0x78, 0x0f, 0x95, 0x4f,
	0x89, 0x20, 0x8a, 0x9a, 0xbb, 0xb7, 0x9a, 0xad, 0xdf, 0xb1, 0xdc, 0xf2, 0xbf, 0x0e, 0x3f, 0xc3,
	0x76, 0xf6, 0xf6, 0x62, 0x84, 0xd4, 0x86, 0x14, 0x14, 0x35, 0xf7, 0xfc, 0x76, 0xf6, 0xb6, 0x5d,
	0xdf, 0xf8, 0x01, 0x4a, 0x11, 0x2d, 0x29, 0x13, 0x5e, 0x23, 0x7e, 0x01, 0xb0, 0xc3, 0x45, 0x28,
	0x15, 0x74, 0x8c, 0x64, 0x43, 0x51, 0x53, 0xf3, 0xad, 0x1d, 0x4e, 0x19, 0xe0, 0x3d, 0x14, 0x41,
	0x91, 0x9b, 0x74, 0xef, 0x91, 0xe5, 0xe1, 0xec, 0x7f, 0x38, 0x3b, 0xd9, 0x85, 0x17, 0x41, 0x25,
	0x6b, 0x22, 0x15, 0x2d, 0xaf, 0x58, 0x93, 0xac, 0x12, 0x39, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff,
	0xe8, 0x3a, 0x0a, 0x3f, 0x12, 0x01, 0x00, 0x00,
}
